{
    "$schema" : "https://json-schema.org/draft/2020-12/schema#",
    "$id" : "https://sabjohnso.github.io/2024/schema/lbm-schema.json",
    "type" : "object",
    "properties" : {
        "kernel" : {"$ref" : "#/$defs/Kernel"},
        "floatType" : {"$ref" : "#/$defs/FloatingPointType"},
        "timeScale" : {"$ref" : "#/$defs/PositiveNumber"},
        "numSteps" : {"$ref" : "#/$defs/NaturalNumber"},
        "lattice" : {"$ref" : "#/$defs/Lattice"},
        "boundaryConditions" : {"$ref" : "#/$defs/BoundaryConditions"},
        "initialConditions" : {"$ref" : "#/$defs/InitialConditions"},
        "obstacles" : {"$ref" : "#/$defs/Obstacles"},
        "viscosity" : {"type" : "number"}
    },
    "required" : [
        "kernel",
        "floatType",
        "timeScale",
        "numSteps",
        "lattice",
        "boundaryConditions",
        "initialConditions",
        "obstacles",
        "viscosity"
    ],
    "additionalProperties" : false,
    "$defs" : {
        "FloatingPointType" : {
            "enum" : ["Float32", "Float64"]
        },
        "Kernel" : {
            "enum" : ["D2Q9"]
        },
        "Lattice" : {},
        "BoundaryConditions" : {
            "type" : "array",
            "items" : {"$ref" : "#/$defs/BoundaryCondition"}
        },
        "BoundaryCondition" : {},
        "InitialConditions" : {
            "type" : "object",
            "properties" : {
                "density" : {"$ref" : "#/$defs/InitialDensity"},
                "velocity" : {"$ref" : "#/$defs/InitialVelocity"}
            },
            "required" : ["density", "velocity"],
            "additionalProperties" : false
        },
        "InitialDensity" : {"$ref" : "#/$defs/Expression"},
        "InitialVelocity" : {
            "type" : "array",
            "items" : {"$ref" : "#/$defs/Expression"},
            "minItems" : 2,
            "maxItems" : 2
        },
        "Obstacles" : {
            "type" : "array",
            "items" : {"$ref" : "#/$defs/Expression"}
        },
        "NaturalNumber" : {
            "type" : "integer",
            "minimum" : 0
        },
        "PositiveNumber" : {
            "type" : "number",
            "exclusiveMinimum" : 0
        },
        "Expression" : {
        }
    }
}
